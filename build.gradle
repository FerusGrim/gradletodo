plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'maven'
    id 'com.github.hierynomus.license' version '0.12.1'
    id 'com.gradle.plugin-publish' version '0.9.7'
}

ext {
    gitHash = getGitHash()
}

private static String getGitHash() {
    def process = 'git rev-parse --short HEAD'.execute()
    process.waitFor()
    return process.exitValue() ? 'unknown' : process.text.trim()
}

group 'com.ferusgrim'
version '1.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configure([compileJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
}

javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
    options.jFlags('-Xms256m', '-Xmx512m')
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile 'com.google.guava:guava:18.0'
}

license {
    header rootProject.file('HEADER')
    include '**/*.java'
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Build-Version': gitHash
        )
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('.repo'))
        }
    }
}

task setupPluginUpload << {

    def key = System.env.gradlePublishKey
    def secret = System.env.gradlePublishSecret

    if (!key) {
        throw new RuntimeException("gradlePublishKey isn't a defined environment variable.")
    }

    if (!secret) {
        throw new RuntimeException("gradlePublishSecret isn't a defined environment variable.")
    }

    System.properties.setProperty("gradle.publish.key", key)
    System.properties.setProperty("gradle.publish.secret", secret)
}

tasks.publishPlugins.dependsOn tasks.setupPluginUpload

pluginBundle {
    website = 'http://www.ferusgrim.com'
    vcsUrl = 'https://github.com/ferusgrim/gradletodo/'
    description = "Gradle plugin simply designed to show comments in your source marked as TODO."
    tags = ["helper", "todo"]

    plugins {
        gradletodo {
            id = 'com.ferusgrim.gradletodo'
            displayName = 'GradleTodo'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}